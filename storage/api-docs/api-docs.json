{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Restaurant Documentation",
        "description": "L5 Swagger OpenApi description for restaurant project",
        "contact": {
            "email": "drrifatalashwad0@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/resend-email-verify-mail": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to resend email verify mail",
                "description": "This method is to resend email verify mail",
                "operationId": "resendEmailVerifyToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to register a user",
                "description": "This method is to register a user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "yourPassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to get user with restaurant",
                "description": "This method is to get user with restaurant",
                "operationId": "getUserWithRestaurent",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to login a user",
                "description": "This method is to login a user",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "yourPassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/auth/checkpin/{id}": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to check pin",
                "description": "This method is to check pin",
                "operationId": "checkPin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user Id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pin"
                                ],
                                "properties": {
                                    "pin": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/user": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to get  user ",
                "description": "This method is to get user",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/users/{perPage}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to get users",
                "description": "This method is to get users",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/business-days/{restaurentId}": {
            "get": {
                "tags": [
                    "business_days_management"
                ],
                "summary": "This method is to get business times ",
                "description": "This method is to get business times",
                "operationId": "getBusinessDays",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "business_days_management"
                ],
                "summary": "This method is to update business times",
                "description": "This method is to update business times",
                "operationId": "updateBusinessDays",
                "parameters": [
                    {
                        "name": "restaurentId",
                        "in": "path",
                        "description": "restaurent Id",
                        "required": false
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_id",
                                    "times"
                                ],
                                "properties": {
                                    "times": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "is_weekend": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "time_slots": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "start_at": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "10:10:00"
                                                            },
                                                            "end_at": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "10:15:00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/campaigns": {
            "put": {
                "tags": [
                    "campaign_management"
                ],
                "summary": "This method is to update campaigns",
                "description": "This method is to update campaigns",
                "operationId": "updateCampaign",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "business_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Holiday Discount"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "spend_certain_amount"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fixed"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "campaign_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "campaign_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "campaign_start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "18:00"
                                    },
                                    "spend_threshold": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15"
                                    },
                                    "campaign_end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "22:00"
                                    },
                                    "dish_ids": {
                                        "description": "List of sub-service IDs associated with the campaign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "free_dish_ids": {
                                        "description": "List of sub-service IDs associated with the campaign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "menu_ids": {
                                        "description": "List of sub-service IDs associated with the campaign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-19T10:00:00Z"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-19T12:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "campaign_management"
                ],
                "summary": "This method is to store campaign",
                "description": "This method is to store campaign",
                "operationId": "createCampaign",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "business_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Holiday Discount"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "spend_certain_amount"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fixed"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "campaign_start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-01"
                                    },
                                    "campaign_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "campaign_start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "18:00"
                                    },
                                    "spend_threshold": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15"
                                    },
                                    "campaign_end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "22:00"
                                    },
                                    "dish_ids": {
                                        "description": "List of sub-service IDs associated with the campaign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "free_dish_ids": {
                                        "description": "List of sub-service IDs associated with the campaign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "menu_ids": {
                                        "description": "List of sub-service IDs associated with the campaign",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-19T10:00:00Z"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-08-19T12:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/campaigns/toggle-active": {
            "put": {
                "tags": [
                    "business_management"
                ],
                "summary": "This method is to toggle campaign",
                "description": "This method is to toggle campaign",
                "operationId": "toggleActiveCampaign",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode",
                                    "role"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "business_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/campaigns/{business_id}/{perPage}": {
            "get": {
                "tags": [
                    "campaign_management"
                ],
                "summary": "This method is to get campaigns ",
                "description": "This method is to get campaigns",
                "operationId": "getCampaigns",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/campaigns/{business_id}/{perPage}": {
            "get": {
                "tags": [
                    "campaign_management"
                ],
                "summary": "This method is to get campaigns ",
                "description": "This method is to get campaigns",
                "operationId": "getCampaignsClient",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/campaigns/single/{business_id}/{id}": {
            "get": {
                "tags": [
                    "campaign_management"
                ],
                "summary": "This method is to get campaign by id ",
                "description": "This method is to get campaign by id ",
                "operationId": "getCampaignById",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/campaigns/{business_id}/{id}": {
            "delete": {
                "tags": [
                    "campaign_management"
                ],
                "summary": "This method is to delete campaign by id",
                "description": "This method is to delete campaign by id",
                "operationId": "deleteCampaignById",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/by-business-id/{business_id}/{perPage}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupons by business id ",
                "description": "This method is to get coupons by business id",
                "operationId": "getCouponsByBusinessIdClient",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/all/{perPage}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupons",
                "description": "This method is to get coupons",
                "operationId": "getCouponsClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/all-auto-applied-coupons/{business_id}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupons",
                "description": "This method is to get coupons",
                "operationId": "getAutoAppliedCouponsByBusinessIdClient",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/single/{id}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupon by id ",
                "description": "This method is to get coupon by id ",
                "operationId": "getCouponByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/get-discount/{business_id}/{code}/{amount}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to check coupon",
                "description": "This method is to check coupon",
                "operationId": "getCouponDiscountClient",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "code",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "description": "amount",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons": {
            "put": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to update coupons",
                "description": "This method is to update coupons",
                "operationId": "updateCoupon",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "business_id",
                                    "name",
                                    "code",
                                    "discount_type",
                                    "discount_amount",
                                    "min_total",
                                    "max_total",
                                    "redemptions",
                                    "coupon_start_date",
                                    "coupon_end_date",
                                    "is_auto_apply",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "business_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tttdddsss"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "percentage"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "min_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "max_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "redemptions": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "coupon_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "coupon_end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "is_auto_apply": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to store coupon",
                "description": "This method is to store coupon",
                "operationId": "createCoupon",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_id",
                                    "name",
                                    "code",
                                    "discount_type",
                                    "discount_amount",
                                    "min_total",
                                    "max_total",
                                    "redemptions",
                                    "coupon_start_date",
                                    "coupon_end_date",
                                    "is_auto_apply",
                                    "is_active"
                                ],
                                "properties": {
                                    "business_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tttdddsss"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "percentage"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "min_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "max_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "redemptions": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "coupon_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "coupon_end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "is_auto_apply": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/toggle-active": {
            "put": {
                "tags": [
                    "business_management"
                ],
                "summary": "This method is to toggle coupon",
                "description": "This method is to toggle coupon",
                "operationId": "toggleActiveCoupon",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode",
                                    "role"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "business_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/{business_id}/{perPage}": {
            "get": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to get coupons ",
                "description": "This method is to get coupons",
                "operationId": "getCoupons",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/single/{business_id}/{id}": {
            "get": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to get coupon by id ",
                "description": "This method is to get coupon by id ",
                "operationId": "getCouponById",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/{business_id}/{id}": {
            "delete": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to delete coupon by id",
                "description": "This method is to delete coupon by id",
                "operationId": "deleteCouponById",
                "parameters": [
                    {
                        "name": "business_id",
                        "in": "path",
                        "description": "business_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/customers": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "This method is to get  bookings ",
                "description": "This method is to get bookings",
                "operationId": "getCustomers",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": true,
                        "example": ""
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter by user creation start date (YYYY-MM-DD)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter by user creation end date (YYYY-MM-DD)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Keyword for searching users by name, email, or phone",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "Filter by review rating",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "frequency_visit",
                        "in": "query",
                        "description": "Visit frequency category (New, Regular, VIP)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "review_start_date",
                        "in": "query",
                        "description": "Filter reviews by start date (YYYY-MM-DD)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "review_end_date",
                        "in": "query",
                        "description": "Filter reviews by end date (YYYY-MM-DD)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "review_keyword",
                        "in": "query",
                        "description": "Keyword to search within review comments",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "frequency_visit",
                        "in": "query",
                        "description": "Filter users based on visit frequency",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Comma-separated list of booking statuses",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "payment_status",
                        "in": "query",
                        "description": "Comma-separated list of payment statuses",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "sub_service_ids",
                        "in": "query",
                        "description": "Comma-separated list of sub-service IDs",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "duration_in_minute",
                        "in": "query",
                        "description": "Filter by booking duration in minutes",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "booking_type",
                        "in": "query",
                        "description": "Comma-separated list of booking types",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "date_filter",
                        "in": "query",
                        "description": "Filter bookings by date (e.g., today, this_week, previous_week, this_month, etc.)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter users by name",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter users by email",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "Filter users by phone number",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "last_visited_date",
                        "in": "query",
                        "description": "Filter users by last visited date (YYYY-MM-DD)",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort order for users (ASC or DESC)",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/daily-order-partner-sale/create": {
            "post": {
                "tags": [
                    "daily-order-partner-sale"
                ],
                "summary": "This method is to store dashboard widget",
                "description": "This method is to store single dashboard widget",
                "operationId": "createDailyOrderPartnerSale",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "restaurant_partner_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Partner Name"
                                    },
                                    "eat_in_orders": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 10
                                    },
                                    "eat_in_orders_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 150.5
                                    },
                                    "takeaway_orders": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    },
                                    "takeaway_orders_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 75.25
                                    },
                                    "notes": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Some notes"
                                    },
                                    "bank_payment": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 100
                                    },
                                    "cash_payment": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 50.5
                                    },
                                    "delivery_orders": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 8
                                    },
                                    "delivery_orders_amount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 8
                                    },
                                    "restaurant_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/daily-order-partner-sale/update": {
            "put": {
                "tags": [
                    "daily-order-partner-sale"
                ],
                "summary": "This method is to update dashboard widget",
                "description": "This method is to update single dashboard widget",
                "operationId": "updateDailyOrderPartnerSale",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "restaurant_partner_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Partner Name"
                                    },
                                    "eat_in_orders": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 10
                                    },
                                    "eat_in_orders_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 150.5
                                    },
                                    "takeaway_orders": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    },
                                    "takeaway_orders_amount": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 75.25
                                    },
                                    "notes": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Some notes"
                                    },
                                    "bank_payment": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 100
                                    },
                                    "cash_payment": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 50.5
                                    },
                                    "delivery_orders": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 8
                                    },
                                    "delivery_orders_amount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 8
                                    },
                                    "restaurant_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/daily-order-partner-sale/get-all/{restaurant_id}": {
            "get": {
                "tags": [
                    "daily-order-partner-sale"
                ],
                "summary": "This method is to get dashboard widget",
                "description": "This method is to get  dashboard widget",
                "operationId": "getDailyOrderPartnerSale",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/daily-order-partner-sale/get/{id}": {
            "get": {
                "tags": [
                    "daily-order-partner-sale"
                ],
                "summary": "This method is to get dashboard widget by id",
                "description": "This method is to get single dashboard widget by id",
                "operationId": "getDailyOrderPartnerSaleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/daily-order-partner-sale/delete/{id}": {
            "delete": {
                "tags": [
                    "daily-order-partner-sale"
                ],
                "summary": "This method is to delete dashboard widget by id",
                "description": "This method is to delete single dashboard widget by id",
                "operationId": "deleteDailyOrderPartnerSaleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dailyviews/{restaurantId}": {
            "post": {
                "tags": [
                    "daily_views"
                ],
                "summary": "This method is to store daily views",
                "description": "This method is to store daily views",
                "operationId": "store",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "view_date",
                                    "daily_views"
                                ],
                                "properties": {
                                    "view_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "daily_views": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dailyviews/update/{restaurantId}": {
            "patch": {
                "tags": [
                    "daily_views"
                ],
                "summary": "This method is to update daily views",
                "description": "This method is to update daily views",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": false,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "view_date"
                                ],
                                "properties": {
                                    "view_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/business-owner-dashboard": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "get all dashboard data combined",
                "description": "get all dashboard data combined",
                "operationId": "getBusinessOwnerDashboardData",
                "parameters": [
                    {
                        "name": "customer_date_filter",
                        "in": "query",
                        "description": "Customer date filter",
                        "required": true,
                        "example": ""
                    },
                    {
                        "name": "order_date_filter",
                        "in": "query",
                        "description": "Booking date filter",
                        "required": true,
                        "example": ""
                    },
                    {
                        "name": "revenue_date_filter",
                        "in": "query",
                        "description": "Revenue date filter",
                        "required": true,
                        "example": ""
                    },
                    {
                        "name": "order_distribution_date",
                        "in": "query",
                        "description": "Top services date filter",
                        "required": true,
                        "example": ""
                    },
                    {
                        "name": "order_date_filter_date_wise",
                        "in": "query",
                        "description": "Top services date filter",
                        "required": true,
                        "example": ""
                    },
                    {
                        "name": "top_dishes_date_filter",
                        "in": "query",
                        "description": "Top services date filter",
                        "required": true,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sales-reports": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Get sales report data",
                "description": "Returns detailed sales report including daily, weekly/monthly trends, and sales breakdown by category and item.",
                "operationId": "getSalesReports",
                "parameters": [
                    {
                        "name": "sales_date_filter",
                        "in": "query",
                        "description": "Sales date filter",
                        "required": true,
                        "example": "this_month"
                    },
                    {
                        "name": "payment_method_filter",
                        "in": "query",
                        "description": "Filter by payment method (cash, credit, digital wallets)",
                        "required": false,
                        "example": "cash"
                    },
                    {
                        "name": "category_filter",
                        "in": "query",
                        "description": "Filter by menu category (Appetizers, Entrées, Desserts)",
                        "required": false,
                        "example": "Appetizers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-widget/create": {
            "post": {
                "tags": [
                    "superadmin-dashboard-widget"
                ],
                "summary": "This method is to store dashboard widget",
                "description": "This method is to store single dashboard widget",
                "operationId": "createWidget",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-widget/update": {
            "put": {
                "tags": [
                    "superadmin-dashboard-widget"
                ],
                "summary": "This method is to update dashboard widget",
                "description": "This method is to update single dashboard widget",
                "operationId": "updateWidget",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-widget/get": {
            "get": {
                "tags": [
                    "superadmin-dashboard-widget"
                ],
                "summary": "This method is to get dashboard widget",
                "description": "This method is to get  dashboard widget",
                "operationId": "getWidget",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-widget/get/{id}": {
            "get": {
                "tags": [
                    "superadmin-dashboard-widget"
                ],
                "summary": "This method is to get dashboard widget by id",
                "description": "This method is to get single dashboard widget by id",
                "operationId": "getWidgetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-widget/delete/{id}": {
            "delete": {
                "tags": [
                    "superadmin-dashboard-widget"
                ],
                "summary": "This method is to delete dashboard widget by id",
                "description": "This method is to delete single dashboard widget by id",
                "operationId": "deleteWidgetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user-dashboard/create": {
            "post": {
                "tags": [
                    "user-dashboard"
                ],
                "summary": "This method is to store user dashboard",
                "description": "This method is to store user dashboard",
                "operationId": "createUserDashboard",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "widget_id",
                                    "order"
                                ],
                                "properties": {
                                    "widget_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "order": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user-dashboard/update": {
            "put": {
                "tags": [
                    "user-dashboard"
                ],
                "summary": "This method is to update user dashboard",
                "description": "This method is to update user dashboard",
                "operationId": "updateUserDashboard",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "widget_id",
                                    "order"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "widget_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "order": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user-dashboard/get": {
            "get": {
                "tags": [
                    "user-dashboard"
                ],
                "summary": "This method is to get user dashboard ",
                "description": "This method is to get user  dashboard ",
                "operationId": "getUserDashboard",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user-dashboard/get/{id}": {
            "get": {
                "tags": [
                    "user-dashboard"
                ],
                "summary": "This method is to get user dashboard  by id",
                "description": "This method is to get single user dashboard  by id",
                "operationId": "getUserDashboardById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user-dashboard/delete/{id}": {
            "delete": {
                "tags": [
                    "user-dashboard"
                ],
                "summary": "This method is to delete user dashboard  by id",
                "description": "This method is to delete user single dashboard  by id",
                "operationId": "deleteUserDashboardById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dishes/{menuId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": " This method is to get dish by menu id",
                "description": "This method is to get dish by menu id",
                "operationId": "getDisuBuMenuId",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to store dish",
                "description": "This method is to store dish",
                "operationId": "storeDish",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "restaurant_id",
                                    "take_away",
                                    "delivery",
                                    "description",
                                    "ingredients",
                                    "calories"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "take_away_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "eat_in_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "delivery_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "take_away": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "ingredients": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "ingredients"
                                    },
                                    "calories": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "calories"
                                    },
                                    "order_number": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "preparation_time": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/uploadimage/{dishId}": {
            "post": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to update dish image",
                "description": "This method is to update dish image",
                "operationId": "updateDishImage",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "file to upload",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/All/dishes/{restaurantId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get all dish",
                "description": "This method is to get all dish",
                "operationId": "getAllDishes",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v2/dishes/All/dishes/{restaurantId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get all dish",
                "description": "This method is to get all dish",
                "operationId": "getAllDishesV2",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/All/dishes/{restaurantId}/{perPage}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get all dish with pagination",
                "description": "This method is to get all dish with pagination",
                "operationId": "getAllDishesWithPagination",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/by-restaurant/{menuId}/{restaurantId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": " This method is to get dish by menu id",
                "description": "This method is to get dish by menu id",
                "operationId": "getDisuBuMenuId2",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/deal-dishes/by-restaurant/{menuId}/{restaurantId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": " This method is to get dish by menu id",
                "description": "This method is to get dish by menu id",
                "operationId": "getDealDisuBuMenuId2",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/getdealsdishes/{dealId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get dish by deal id",
                "description": "This method is to get dish by deal id",
                "operationId": "getDishByDealId",
                "parameters": [
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "dealId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/getdealsdishes/{dealId}/{restaurantId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get dish by deal id",
                "description": "This method is to get dish by deal id",
                "operationId": "getDishByDealId2",
                "parameters": [
                    {
                        "name": "dealId",
                        "in": "path",
                        "description": "dealId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/by-dishid/{dishId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get dish by  id",
                "description": "This method is to get dish by  id",
                "operationId": "getDishById",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/by-dishid/{dishId}/{restaurantId}": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get dish by  id",
                "description": "This method is to get dish by  id",
                "operationId": "getDishById2",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/getusermenu/dealsdishes": {
            "get": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to get all dish with deals",
                "description": "This method is to get all dish with deals",
                "operationId": "getAllDishesWithDeals",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/multiple/{restaurantId}": {
            "post": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to store multiple  dish",
                "description": "This method is to store multiple  dish",
                "operationId": "storeMultipleDish",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dishes"
                                ],
                                "properties": {
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "hggggg",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "restaurant_id": 56,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "order_number": 1,
                                                "preparation_time": 1
                                            },
                                            {
                                                "name": "hggggg",
                                                "price": 555,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "restaurant_id": 56,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "order_number": 1,
                                                "preparation_time": 1
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/single/deal/{menuId}": {
            "post": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to store single deal dish",
                "description": "This method is to store single deal dish",
                "operationId": "storeDealDish",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "restaurant_id",
                                    "take_away",
                                    "delivery",
                                    "description",
                                    "ingredients",
                                    "calories",
                                    "selected"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "50"
                                    },
                                    "take_away_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "50"
                                    },
                                    "eat_in_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "50"
                                    },
                                    "delivery_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "50"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "take_away": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "ingredients": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "ingredients"
                                    },
                                    "calories": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "calories"
                                    },
                                    "order_number": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "preparation_time": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "selected": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "dish_id": "1"
                                            },
                                            {
                                                "dish_id": "2"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/multiple/deal/{menuId}": {
            "post": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to store multiple deal dish",
                "description": "This method is to store multiple deal dish",
                "operationId": "storeMultipleDealDish",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dishes"
                                ],
                                "properties": {
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "hggggg",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "restaurant_id": 56,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "selected": {
                                                    "0": {
                                                        "dish_id": "1"
                                                    },
                                                    "order_number": 1,
                                                    "preparation_time": 1
                                                }
                                            },
                                            {
                                                "name": "hggggg",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "restaurant_id": 56,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "selected": {
                                                    "0": {
                                                        "dish_id": "1"
                                                    },
                                                    "order_number": 1,
                                                    "preparation_time": 1
                                                }
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to update multiple deal dish",
                "description": "This method is to update multiple deal dish",
                "operationId": "updateMultipleDealDish",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dishes"
                                ],
                                "properties": {
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": 1,
                                                "name": "hggggg",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "order_number": 1,
                                                "preparation_time": "1",
                                                "take_away": 1,
                                                "delivery": 0,
                                                "restaurant_id": 56,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "selected": [
                                                    {
                                                        "dish_id": "1"
                                                    }
                                                ]
                                            },
                                            {
                                                "id": 2,
                                                "name": "hggggg",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "order_number": 1,
                                                "preparation_time": 1,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "restaurant_id": 56,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "selected": [
                                                    {
                                                        "dish_id": "1"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/Edit/multiple": {
            "patch": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to update multiple dish",
                "description": "This method is to update multiple dish",
                "operationId": "updateMultipleDish",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dishes"
                                ],
                                "properties": {
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "aaaaa",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "order_number": 1,
                                                "preparation_time": 1,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "id": 2
                                            },
                                            {
                                                "name": "aaaaa",
                                                "price": 555,
                                                "take_away_discounted_price": 555,
                                                "eat_in_discounted_price": 555,
                                                "delivery_discounted_price": 555,
                                                "order_number": 1,
                                                "preparation_time": 1,
                                                "take_away": 1,
                                                "delivery": 0,
                                                "description": "fffffffffff",
                                                "ingredients": "hgggxrth srthdhh thgg",
                                                "calories": "cfgt trfgh s rth",
                                                "id": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/Updatedish": {
            "patch": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to update dish ",
                "description": "This method is to update dish ",
                "operationId": "updateDish2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "description",
                                    "id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "ggg"
                                    },
                                    "price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "take_away_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "eat_in_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "delivery_discounted_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "preparation_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/dishes/{dishId}": {
            "delete": {
                "tags": [
                    "dishes"
                ],
                "summary": "This method is to delete dish",
                "description": "This method is to delete dish",
                "operationId": "deleteDish",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/email-templates": {
            "put": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to update email template",
                "description": "This method is to update email template",
                "operationId": "updateEmailTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to store email template",
                "description": "This method is to store email template",
                "operationId": "createEmailTemplate",
                "requestBody": {
                    "description": "use {{dynamic-username}} {{dynamic-verify-link}} in the template.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "email_verification_mail"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates/{perPage}": {
            "get": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to get email templates",
                "description": "This method is to get email templates",
                "operationId": "getEmailTemplates",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-types": {
            "get": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to get email template types ",
                "description": "This method is to get email template types",
                "operationId": "getEmailTemplateTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates/{id}": {
            "delete": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to delete email template by id",
                "description": "This method is to delete email template by id",
                "operationId": "deleteEmailTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates/single/{id}": {
            "get": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to get email template by id",
                "description": "This method is to get email template by id",
                "operationId": "getEmailTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-wrappers": {
            "put": {
                "tags": [
                    "template_management.wrapper.email"
                ],
                "summary": "This method is to update email template wrapper",
                "description": "This method is to update email template wrapper",
                "operationId": "updateEmailTemplateWrapper",
                "requestBody": {
                    "description": "use [content] in the template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "emal v1"
                                    },
                                    "is_active": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-wrappers/{perPage}": {
            "get": {
                "tags": [
                    "template_management.wrapper.email"
                ],
                "summary": "This method is to get email template  wrappers ",
                "description": "This method is to get email template wrappers",
                "operationId": "getEmailTemplateWrappers",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-wrappers/single/{id}": {
            "get": {
                "tags": [
                    "template_management.wrapper.email"
                ],
                "summary": "This method is to get email template wrapper by id",
                "description": "This method is to get email template wrapper by id",
                "operationId": "getEmailTemplateWrapperById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expense-types": {
            "put": {
                "tags": [
                    "expense_type_management"
                ],
                "summary": "This method is to update expense type",
                "description": "This method is to update expense type",
                "operationId": "updateExpenseType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "restaurant_id": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "expense_type_management"
                ],
                "summary": "This method is to store expense type",
                "description": "This method is to store expense type",
                "operationId": "createExpenseType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "restaurant_id": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expense-types/{restaurant_id}": {
            "get": {
                "tags": [
                    "expense_type_management"
                ],
                "summary": "This method is to get expense types ",
                "description": "This method is to get expense types",
                "operationId": "getAllExpenseTypes",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expense-types/{restaurant_id}/{perPage}": {
            "get": {
                "tags": [
                    "expense_type_management"
                ],
                "summary": "This method is to get expense types ",
                "description": "This method is to get expense types",
                "operationId": "getExpenseTypes",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": true,
                        "example": "is_active"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expense-types/{id}": {
            "delete": {
                "tags": [
                    "expense_type_management"
                ],
                "summary": "This method is to delete fuel station by id",
                "description": "This method is to delete fuel station by id",
                "operationId": "deleteExpenseTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forgetpassword": {
            "post": {
                "tags": [
                    "forgot_password"
                ],
                "summary": "This method is to store token",
                "description": "This method is to store token",
                "operationId": "storeForgetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/auth/changepassword": {
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to change password",
                "description": "This method is to change password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "cpassword"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    },
                                    "cpassword": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/auth/changepassword": {
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to change password by super admin",
                "description": "This method is to change password by super admin",
                "operationId": "changePasswordBySuperAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "cpassword"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    },
                                    "user_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/auth/change-email": {
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to change email by super admin",
                "description": "This method is to change email by super admin",
                "operationId": "changeEmailBySuperAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rifat@gmail.com",
                                    "cpassword"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifat@gmail.com"
                                    },
                                    "user_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forgetpassword/reset/{token}": {
            "patch": {
                "tags": [
                    "forgot_password"
                ],
                "summary": "This method is to change password",
                "description": "This method is to change password",
                "operationId": "changePasswordByToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/leaflet/create": {
            "post": {
                "tags": [
                    "leaflet"
                ],
                "summary": "This method is to store leaflet",
                "description": "This method is to store leaflet",
                "operationId": "createLeaflet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "thumbnail": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "leaflet_data": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaflet/update": {
            "put": {
                "tags": [
                    "leaflet"
                ],
                "summary": "This method is to update leaflet",
                "description": "This method is to update leaflet",
                "operationId": "updateLeaflet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "thumbnail": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "leaflet_data": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/leaflet/get": {
            "get": {
                "tags": [
                    "leaflet"
                ],
                "summary": "This method is to get leaflet ",
                "description": "This method is to get leaflet ",
                "operationId": "getLeaflet",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/leaflet/get/{id}": {
            "get": {
                "tags": [
                    "leaflet"
                ],
                "summary": "This method is to get leaflet  by id",
                "description": "This method is to get single leaflet  by id",
                "operationId": "getLeafletById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/leaflet/{restaurant_id}/{id}": {
            "delete": {
                "tags": [
                    "leaflet"
                ],
                "summary": "This method is to delete leaflet  by id",
                "description": "This method is to delete leaflet  by id",
                "operationId": "deleteLeafletById",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/leaflet-image": {
            "post": {
                "tags": [
                    "leaflet"
                ],
                "summary": "This method is to store leaflet image ",
                "description": "This method is to store leaflet image",
                "operationId": "createLeafletImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/menu/csv/{restaurantId}": {
            "post": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to store menu",
                "description": "This method is to store menu",
                "operationId": "storeMenuByCsv",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/{restaurantId}": {
            "post": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to store menu",
                "description": "This method is to store menu",
                "operationId": "storeMenu",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "show_in_customer": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/check/{restaurantId}": {
            "post": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to check menu",
                "description": "This method is to check menu",
                "operationId": "checkMenu",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/update/{MenuId}": {
            "patch": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to update menu",
                "description": "This method is to update menu",
                "operationId": "updateMenu",
                "parameters": [
                    {
                        "name": "MenuId",
                        "in": "path",
                        "description": "MenuId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "show_in_customer": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu-dishes-variationtypes-variations": {
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to get menu by id",
                "description": "This method is to get menu by id",
                "operationId": "getCombinedDataMDVTV",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/{menuId}": {
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to get menu by id",
                "description": "This method is to get menu by id",
                "operationId": "getMenuById",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to delete menu",
                "description": "This method is to delete menu",
                "operationId": "deleteMenu",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/by-restaurant/{menuId}/{restaurantId}": {
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to get menu by id",
                "description": "This method is to get menu by id",
                "operationId": "getMenuById2",
                "parameters": [
                    {
                        "name": "menuId",
                        "in": "path",
                        "description": "menuId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/AllbuId/{restaurantId}": {
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to get menu by restaurant id",
                "description": "This method is to get menu by restaurant id",
                "operationId": "getMenuByRestaurantId",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "description": "response_type: in pdf,csv,json",
                        "required": true,
                        "example": "json"
                    },
                    {
                        "name": "file_name",
                        "in": "query",
                        "description": "file_name",
                        "required": true,
                        "example": "employee"
                    },
                    {
                        "name": "show_in_customer",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menus/all-info/{restaurantId}": {
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to get menu by restaurant id",
                "description": "This method is to get menu by restaurant id",
                "operationId": "getMenuWithAllInfoByRestaurantId",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "response_type",
                        "in": "query",
                        "description": "response_type: in pdf,csv,json",
                        "required": true,
                        "example": "json"
                    },
                    {
                        "name": "file_name",
                        "in": "query",
                        "description": "file_name",
                        "required": true,
                        "example": "employee"
                    },
                    {
                        "name": "show_in_customer",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/AllbuId/{restaurantId}/{perPage}": {
            "get": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to get menu by restaurant id with pagination",
                "description": "This method is to get menu by restaurant id with pagination",
                "operationId": "getMenuByRestaurantIdWithPagination",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "show_in_customer",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/multiple/{restaurantId}": {
            "post": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to store multiple menu",
                "description": "This method is to store multiple menu",
                "operationId": "storeMultipleMenu",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "menu"
                                ],
                                "properties": {
                                    "menu": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "hggggg",
                                                "description": 555,
                                                "order_number": 1,
                                                "show_in_customer": 0
                                            },
                                            {
                                                "name": "hggggg",
                                                "description": 555,
                                                "order_number": 1,
                                                "show_in_customer": 0
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/Edit/multiple": {
            "patch": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to update multiple menu",
                "description": "This method is to update multiple menu",
                "operationId": "updateMultipleMenu",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "menu",
                                    "restaurant_id"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "array",
                                        "example": "1"
                                    },
                                    "menu": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": "1",
                                                "name": "hggggg",
                                                "description": 555
                                            },
                                            {
                                                "id": "2",
                                                "name": "hggggg",
                                                "description": 555
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/menu/Updatemenu": {
            "patch": {
                "tags": [
                    "menu"
                ],
                "summary": "This method is to update menu2",
                "description": "This method is to update menu2",
                "operationId": "updateMenu2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": [
                    "notification"
                ],
                "summary": "This method is to get notification by reciever_id",
                "description": "This method is to get notification by reciever_id",
                "operationId": "getNotification",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "notification"
                ],
                "summary": "This method is to store notification",
                "description": "This method is to store notification",
                "operationId": "storeNotification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message",
                                    "reciever_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "hello"
                                    },
                                    "message": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "hello"
                                    },
                                    "reciever_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notification/{notificationId}": {
            "delete": {
                "tags": [
                    "notification"
                ],
                "summary": "This method is to delete notification",
                "description": "This method is to delete notification",
                "operationId": "deleteNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "notificationId",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "notification"
                ],
                "summary": "This method is to update notification",
                "description": "This method is to update notification",
                "operationId": "updateNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "notificationId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/{restaurantId}": {
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to store order",
                "description": "This method is to store order",
                "operationId": "storeOrder",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "if customer_id null and order type Delivery than a customer will be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "customer_id",
                                    "customer_name",
                                    "remarks",
                                    "table_number",
                                    "type",
                                    "phone",
                                    "address",
                                    "post_code"
                                ],
                                "properties": {
                                    "request_object": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "{}}"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "50"
                                    },
                                    "customer_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "customer_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "table_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "5"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0111"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "post_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "post_code"
                                    },
                                    "discount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "discount_type"
                                    },
                                    "cash": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "card": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "customer_note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "coupon_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "initial_note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "qty": 10,
                                                "dish_id": 1,
                                                "variation_ids": [
                                                    1,
                                                    2
                                                ]
                                            },
                                            {
                                                "qty": 10,
                                                "meal_id": 1,
                                                "meal_dishes": [
                                                    {
                                                        "dish_id": "1",
                                                        "variation_ids": [
                                                            1,
                                                            2
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/orderbyuser/{restaurantId}": {
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to store order by user",
                "description": "This method is to store order by user",
                "operationId": "storeByUser",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "customer_id",
                                    "customer_name",
                                    "remarks",
                                    "table_number",
                                    "type",
                                    "phone",
                                    "address",
                                    "post_code"
                                ],
                                "properties": {
                                    "request_object": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "{}}"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "50"
                                    },
                                    "total_due_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "50"
                                    },
                                    "tax": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "50"
                                    },
                                    "customer_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "customer_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "table_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "5"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0111"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "post_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "post_code"
                                    },
                                    "discount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "cash": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "card": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "qty": 10,
                                                "dish_id": 1,
                                                "variation_ids": [
                                                    1,
                                                    2
                                                ]
                                            },
                                            {
                                                "qty": 10,
                                                "meal_id": 1,
                                                "meal_dishes": [
                                                    {
                                                        "dish_id": "1",
                                                        "variation_ids": [
                                                            1,
                                                            2
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/{orderId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order by id",
                "description": "This method is to get order by id",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to delete order",
                "description": "This method is to delete order",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to complete order",
                "description": "This method is to complete order",
                "operationId": "orderComplete",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card",
                                    "cash"
                                ],
                                "properties": {
                                    "card": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "50"
                                    },
                                    "cash": {
                                        "type": "number",
                                        "format": "string",
                                        "example": "200"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/updatestatus/{orderId}": {
            "patch": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to update order status",
                "description": "This method is to update order status",
                "operationId": "updateStatus",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/edit/order/{orderId}": {
            "patch": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to edit order",
                "description": "This method is to edit order",
                "operationId": "editOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "customer_id",
                                    "customer_name",
                                    "remarks",
                                    "table_number",
                                    "type",
                                    "phone",
                                    "address",
                                    "post_code"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "50"
                                    },
                                    "customer_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "table_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "5"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0111"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "post_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "post_code"
                                    },
                                    "discount": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "discount_type"
                                    },
                                    "cash": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "card": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "customer_note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "initial_note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "request_object": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "{}}"
                                    },
                                    "dishes": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "qty": 10,
                                                "dish_id": 1,
                                                "variation_ids": [
                                                    1,
                                                    2
                                                ]
                                            },
                                            {
                                                "qty": 10,
                                                "meal_id": 1,
                                                "meal_dishes": [
                                                    {
                                                        "dish_id": "1",
                                                        "variation_ids": [
                                                            1,
                                                            2
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/by-restaurant/{orderId}/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order by id",
                "description": "This method is to get order by id",
                "operationId": "getOrderById2",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/getorderby/customerid/{customerId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order by customer id",
                "description": "This method is to get order by customer id",
                "operationId": "getOrderByCustomerId",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "customerId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/orderlist/today/{status}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get todays order by status",
                "description": "This method is to get todays order by status",
                "operationId": "getTodaysOrderByStatus",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "status",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get all order",
                "description": "This method is to get all order",
                "operationId": "getAllOrder",
                "parameters": [
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/order/today/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get todays order",
                "description": "This method is to get todays order ",
                "operationId": "getAllOrderToday",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_type",
                        "in": "path",
                        "description": "order_type",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/order/every/{perPage}/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get everyday order",
                "description": "This method is to get everyday order ",
                "operationId": "getAllOrderEveryDay",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "from_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "to_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_amount",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_amount",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "table_number",
                        "in": "query",
                        "description": "table_number",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "customer_name",
                        "in": "query",
                        "description": "customer_name",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "customer_phone",
                        "in": "query",
                        "description": "customer_phone",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "example": "type1,type2,type3"
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status1,status2,status3"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/order/every/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get everyday order",
                "description": "This method is to get everyday order ",
                "operationId": "getAllOrderEveryDayV2",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "from_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "to_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_amount",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_amount",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "table_number",
                        "in": "query",
                        "description": "table_number",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "customer_name",
                        "in": "query",
                        "description": "customer_name",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "customer_phone",
                        "in": "query",
                        "description": "customer_phone",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "example": "type1,type2,type3"
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status1,status2,status3"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v3.0/order/All/order/every/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get everyday order",
                "description": "This method is to get everyday order ",
                "operationId": "getAllOrderEveryDayV3",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "from_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "to_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_amount",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_amount",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "table_number",
                        "in": "query",
                        "description": "table_number",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "customer_name",
                        "in": "query",
                        "description": "customer_name",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "customer_phone",
                        "in": "query",
                        "description": "customer_phone",
                        "required": true,
                        "example": "100"
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "example": "type1,type2,type3"
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status1,status2,status3"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/order-by-type/{type}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order by type",
                "description": "This method is to get order by type",
                "operationId": "getOrderByType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type",
                        "required": true,
                        "example": "eat-----in"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/order-by-type/by-restaurant/{type}/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order by type and restaurant id",
                "description": "This method is to get order by type restaurant id",
                "operationId": "getOrderByType2",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type",
                        "required": true,
                        "example": "eat-----in"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/pending/order/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get all pending order",
                "description": "This method is to get all pending order",
                "operationId": "getAllPendingOrder",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/pending/order/{restaurantId}/{perPage}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get all pending order with pagination",
                "description": "This method is to get all pending order with pagination",
                "operationId": "getAllPendingOrderWithPagination",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/All/autoprint/order/{restaurantId}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get all autoprint order",
                "description": "This method is to get all autoprint order",
                "operationId": "getAllAutoPrintOrder",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/get/daily/order/report": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get daily order report",
                "description": "This method is to get daily order report",
                "operationId": "getdailyOrderReport",
                "parameters": [
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/oderreporting/{min}/{max}/{fromdate}/{todate}/{status}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order report",
                "description": "This method is to get order report",
                "operationId": "getOrderReport",
                "parameters": [
                    {
                        "name": "min",
                        "in": "path",
                        "description": "min",
                        "required": true,
                        "example": "0"
                    },
                    {
                        "name": "max",
                        "in": "path",
                        "description": "max",
                        "required": true,
                        "example": "99"
                    },
                    {
                        "name": "fromdate",
                        "in": "path",
                        "description": "fromdate",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "todate",
                        "in": "path",
                        "description": "todate",
                        "required": true,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "status",
                        "required": true,
                        "example": "pending"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/oderreporting/{restaurantId}/{min}/{max}/{fromdate}/{todate}/{status}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order report by restaurant id",
                "description": "This method is to get order report by restaurant id",
                "operationId": "getorderReportByRestaurantId",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    },
                    {
                        "name": "min",
                        "in": "path",
                        "description": "min",
                        "required": true,
                        "example": "0"
                    },
                    {
                        "name": "max",
                        "in": "path",
                        "description": "max",
                        "required": true,
                        "example": "99"
                    },
                    {
                        "name": "fromdate",
                        "in": "path",
                        "description": "fromdate",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "todate",
                        "in": "path",
                        "description": "todate",
                        "required": true,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "status",
                        "required": true,
                        "example": "pending"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/oderreporting/{restaurantId}/{fromdate}/{todate}/{status}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order report by restaurant id",
                "description": "This method is to get order report by restaurant id",
                "operationId": "getorderReportByRestaurantId2",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    },
                    {
                        "name": "min",
                        "in": "path",
                        "description": "min",
                        "required": true,
                        "example": "0"
                    },
                    {
                        "name": "max",
                        "in": "path",
                        "description": "max",
                        "required": true,
                        "example": "99"
                    },
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "fromdate",
                        "in": "path",
                        "description": "fromdate",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "todate",
                        "in": "path",
                        "description": "todate",
                        "required": true,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "status",
                        "required": true,
                        "example": "pending"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/byuser/all/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "This method is to get order by user",
                "description": "This method is to get order by user",
                "operationId": "getOrderByUser",
                "parameters": [
                    {
                        "name": "order_app",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "example": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/get/table-information/{restaurantId}": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get table report",
                "description": "This method is to get table report",
                "operationId": "getTableInformation",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/super/admin": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to store super admin",
                "description": "This method is to store super admin",
                "operationId": "createsuperAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "first_Name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/role/getrole": {
            "get": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to get role",
                "description": "This method is to get role",
                "operationId": "getRole",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/user/registration": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to store user",
                "description": "This method is to store user",
                "operationId": "createUser2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "first_Name",
                                    "phone"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "customer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/user/with/restaurant": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to store user with restaurant",
                "description": "This method is to store user with restaurant",
                "operationId": "createUserWithRestaurant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "first_Name",
                                    "phone"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifat@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "restaurant_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant_name"
                                    },
                                    "restaurant_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant_address"
                                    },
                                    "restaurant_postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant_postcode"
                                    },
                                    "restaurant_enable_question": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_EmailAddress": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_GoogleMapApi": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_totalTables": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_homeText": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_AdditionalInformation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_Webpage": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_PhoneNumber": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_About": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "restaurant_Layout": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_eat_in": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_take_away": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_customer_order": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "review_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "emoji"
                                    },
                                    "Is_guest_user": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "false"
                                    },
                                    "is_review_silder": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "false"
                                    },
                                    "review_only": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "is_business_type_restaurant": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant"
                                    },
                                    "header_image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/header_image/default.png"
                                    },
                                    "menu_pdf": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/menu_pdf/default.pdf"
                                    },
                                    "is_pdf_manu": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "primary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "secondary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "client_primary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "client_secondary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "client_tertiary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "user_review_report": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "guest_user_review_report": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "times": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "start_at": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "10:00"
                                                },
                                                "end_at": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "22:00"
                                                },
                                                "is_weekend": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "time_slots": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "start_at": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "10:00"
                                                            },
                                                            "end_at": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "11:00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/user/check/email": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to check user",
                "description": "This method is to check user",
                "operationId": "checkEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/guestuserregister": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to store guest user",
                "description": "This method is to store guest user",
                "operationId": "createGuestUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "first_Name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/staffregister/{restaurantId}": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to store stalf",
                "description": "This method is to store stalf",
                "operationId": "createStaffUser",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "first_Name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/pin/{ownerId}": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to update pin",
                "description": "This method is to update pin",
                "operationId": "updatePin",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pin"
                                ],
                                "properties": {
                                    "pin": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/owner/{ownerId}": {
            "get": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to get user by id",
                "description": "This method is to get user by id",
                "operationId": "getOwnerById",
                "parameters": [
                    {
                        "name": "ownerId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/owner/getAllowner/withourrestaurant": {
            "get": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to get user not havhing restaurant",
                "description": "This method is to get user not havhing restaurant",
                "operationId": "getOwnerNotHaveRestaurent",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/owner/loaduser/bynumber/{phoneNumber}": {
            "get": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to get user by phone number",
                "description": "This method is to get user by phone number",
                "operationId": "getOwnerByPhoneNumber",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/owner/updateuser": {
            "patch": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to update user",
                "description": "This method is to update user",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "last_name",
                                    "first_Name",
                                    "phone",
                                    "Address"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "Address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "door_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "old_password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "post_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/updateuser/by-user": {
            "patch": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to update user by user",
                "description": "This method is to update user by user",
                "operationId": "updateUserByUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "last_name",
                                    "first_Name",
                                    "phone",
                                    "Address"
                                ],
                                "properties": {
                                    "last_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "Address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "door_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "old_password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "post_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/owner/profileimage": {
            "post": {
                "tags": [
                    "owner"
                ],
                "summary": "This method is to update  user image",
                "description": "This method is to update  user image",
                "operationId": "updateImage",
                "parameters": [
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": false,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "file to upload",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/header-image/{restaurant_id}": {
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to store header image ",
                "description": "This method is to store header image",
                "operationId": "createHeaderImage",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/placeholder-image/{restaurant_id}": {
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to store placeholder image ",
                "description": "This method is to store placeholder image",
                "operationId": "createPlaceholderImage",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/rating-page-image/{restaurant_id}": {
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to store Rating Page image ",
                "description": "This method is to store Rating Page image",
                "operationId": "createRatingPageImage",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/menu-pdf/{restaurant_id}": {
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "Upload PDF",
                "description": "This method is used to upload a PDF menu file ",
                "operationId": "uploadMenuPDF",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "menu pdf file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "menu_pdf"
                                ],
                                "properties": {
                                    "menu_pdf": {
                                        "description": "PDF file to be uploaded",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payments-invoice-file": {
            "post": {
                "tags": [
                    "expense_management"
                ],
                "summary": "This method is to store reciept image",
                "description": "This method is to store reciept image",
                "operationId": "createPaymentInvoiceFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expenses": {
            "put": {
                "tags": [
                    "expense_management"
                ],
                "summary": "This method is to update expenses",
                "description": "This method is to update expenses",
                "operationId": "updateInvoicePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "bkash"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "restaurant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "is_active"
                                    },
                                    "paid_by": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "paid_by"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "expense_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "expense type"
                                    },
                                    "reciepts": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "a.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "expense_management"
                ],
                "summary": "This method is to store expenses",
                "description": "This method is to store expenses",
                "operationId": "createInvoicePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "bkash"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "restaurant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "is_active"
                                    },
                                    "paid_by": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "paid_by"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "expense_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "expense type"
                                    },
                                    "reciepts": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "a.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expenses/{restaurant_id}/{perPage}": {
            "get": {
                "tags": [
                    "expense_management"
                ],
                "summary": "This method is to get expenses ",
                "description": "This method is to get expenses",
                "operationId": "getInvoicePayments",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "payment_method",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2.0/expenses/get/single/{id}": {
            "get": {
                "tags": [
                    "expense_management"
                ],
                "summary": "This method is to get expenses by id",
                "description": "This method is to get expenses by id",
                "operationId": "getInvoicePaymentByIdv2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/expenses/{id}": {
            "delete": {
                "tags": [
                    "expense_management"
                ],
                "summary": "This method is to delete expenses by id",
                "description": "This method is to delete expenses by id",
                "operationId": "deleteInvoicePaymentByIdV2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/customer-report": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get customer report",
                "description": "This method is to get customer report",
                "operationId": "customerDashboardReport",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "customer_id",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant-report": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get restaurant report",
                "description": "This method is to get restaurant report",
                "operationId": "restaurantDashboardReport",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dashboard-report/get/table-report/{restaurantId}": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get table report",
                "description": "This method is to get table report",
                "operationId": "getTableReport",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dashboard-report/{restaurantId}": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get dashboard report",
                "description": "This method is to get dashboard report",
                "operationId": "getDashboardReport",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dashboard-report/restaurant/get": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get restaurant report",
                "description": "This method is to get restaurant report",
                "operationId": "getRestaurantReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dashboard-report2": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get dashboard report",
                "description": "This method is to get dashboard report",
                "operationId": "getDashboardReport2",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "query",
                        "description": "restaurantId",
                        "required": false,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer-dish-report/by-phone-number/{phone}/{restaurantId}": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get customer dish report",
                "description": "This method is to get customer dish report",
                "operationId": "customerDishReport",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "description": "phone",
                        "required": true,
                        "example": "0"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer-dish-report/by-customer-id/{customer_id}/{restaurantId}": {
            "get": {
                "tags": [
                    "report"
                ],
                "summary": "This method is to get customer dish report by customer id",
                "description": "This method is to get customer dish report by customer id",
                "operationId": "customerDishReportByCustomerId",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": "customer_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to get all restaurant ",
                "description": "This method is to get all restaurant ",
                "operationId": "getAllRestaurants",
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "restaurant name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to store restaurant",
                "description": "This method is to store restaurant",
                "operationId": "storeRestaurent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Name",
                                    "Address",
                                    "PostCode",
                                    "enable_question"
                                ],
                                "properties": {
                                    "Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "Address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "PostCode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "enable_question": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_eat_in": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_take_away": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_customer_order": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/by-owner-id": {
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to store restaurant by owner id",
                "description": "This method is to store restaurant by owner id",
                "operationId": "storeRestaurentByOwnerId",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Name",
                                    "Address",
                                    "PostCode",
                                    "enable_question"
                                ],
                                "properties": {
                                    "Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "Address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "PostCode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "OwnerID": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "enable_question": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_eat_in": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_take_away": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_customer_order": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/delete/{id}": {
            "delete": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to delete restaurant by id",
                "description": "This method is to delete restaurant by id",
                "operationId": "deleteRestaurantByRestaurentId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/delete/force-delete/{email}": {
            "delete": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to delete restaurant by id",
                "description": "This method is to delete restaurant by id",
                "operationId": "deleteRestaurantByRestaurentIdForceDelete",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "email",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/uploadimage/{restaurentId}": {
            "post": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to upload restaurant image",
                "description": "This method is to upload restaurant image",
                "operationId": "uploadRestaurentImage",
                "parameters": [
                    {
                        "name": "restaurentId",
                        "in": "path",
                        "description": "restaurent Id",
                        "required": false
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": false,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "description": "file to upload",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/UpdateResturantDetails/{restaurentId}": {
            "patch": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to update restaurant",
                "description": "This method is to update restaurant",
                "operationId": "UpdateResturantDetails",
                "parameters": [
                    {
                        "name": "restaurentId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": true,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Name",
                                    "Layout",
                                    "Address",
                                    "PostCode",
                                    "enable_question",
                                    "totalTables"
                                ],
                                "properties": {
                                    "GoogleMapApi": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant name"
                                    },
                                    "Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant name"
                                    },
                                    "totalTables": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "EmailAddress": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "homeText": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "AdditionalInformation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "PostCode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "Webpage": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "PhoneNumber": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "About": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "Layout": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "Address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "enable_question": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_eat_in": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "tax_percentage": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "show_image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_take_away": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "is_customer_order": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "Key_ID": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "review_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0"
                                    },
                                    "google_map_iframe": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "Is_guest_user": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "false"
                                    },
                                    "is_review_silder": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "false"
                                    },
                                    "is_business_type_restaurant": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "restaurant"
                                    },
                                    "header_image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/header_image/default.png"
                                    },
                                    "menu_pdf": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/menu_pdf/default.pdf"
                                    },
                                    "is_pdf_manu": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    },
                                    "primary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "secondary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "client_primary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "client_secondary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "client_tertiary_color": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "red"
                                    },
                                    "user_review_report": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "guest_user_review_report": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_customer_order_enabled": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_report_email_enabled": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "pin": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "enable_customer_order_payment": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "STRIPE_KEY": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "string"
                                    },
                                    "STRIPE_SECRET": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "string"
                                    },
                                    "eat_in_payment_mode": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "cash": 0,
                                            "stripe": 0
                                        }
                                    },
                                    "takeaway_payment_mode": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "cash": 0,
                                            "stripe": 0
                                        }
                                    },
                                    "delivery_payment_mode": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "cash": 0,
                                            "stripe": 0
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/{restaurantId}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to get restaurant by id",
                "description": "This method is to get restaurant by id",
                "operationId": "getrestaurantById",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurants/{perPage}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to get all restaurant ",
                "description": "This method is to get all restaurant ",
                "operationId": "getRestaurants",
                "parameters": [
                    {
                        "name": "response_type",
                        "in": "query",
                        "description": "response_type: in pdf,csv,json",
                        "required": true,
                        "example": "json"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "restaurant name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/client/restaurants/{perPage}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to get all restaurant ",
                "description": "This method is to get all restaurant ",
                "operationId": "getRestaurantsClients",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "sort_by",
                        "required": true,
                        "example": "sort_by"
                    },
                    {
                        "name": "sort_type",
                        "in": "query",
                        "description": "sort_type",
                        "required": true,
                        "example": "sort_type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/Restuarant/tables/{restaurantId}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to get restaurant with table by restaurant id",
                "description": "This method is to get restaurant with table by restaurant id",
                "operationId": "getrestaurantTableByRestaurantId",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/restaurant-partner/create": {
            "post": {
                "tags": [
                    "restaurant-partner"
                ],
                "summary": "This method is to store dashboard widget",
                "description": "This method is to store single dashboard widget",
                "operationId": "createRestaurantOrderPartner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "restaurant_partner_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "delivery_order_commission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "delivery_shop_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "eat_in": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "eat_in_order_commission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "eat_in_shop_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "takeaway": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "takeaway_order_commission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "takeaway_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "contact_details": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "api_key": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "api_key"
                                    },
                                    "payment_terms": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "payment_terms"
                                    },
                                    "is_active": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "is_active"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/restaurant-partner/update": {
            "put": {
                "tags": [
                    "restaurant-partner"
                ],
                "summary": "This method is to update dashboard widget",
                "description": "This method is to update single dashboard widget",
                "operationId": "updateRestaurantOrderPartner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "restaurant_partner_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "delivery": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "delivery_order_commission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "delivery_shop_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "eat_in": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "eat_in_order_commission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "eat_in_shop_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "takeaway": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "takeaway_order_commission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "takeaway_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "contact_details": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "api_key": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "api_key"
                                    },
                                    "payment_terms": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "payment_terms"
                                    },
                                    "is_active": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "is_active"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/restaurant-partner/get-all/{restaurant_id}": {
            "get": {
                "tags": [
                    "restaurant-partner"
                ],
                "summary": "This method is to get dashboard widget",
                "description": "This method is to get  dashboard widget",
                "operationId": "getRestaurantOrderPartner",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/restaurant-partner/get/{id}": {
            "get": {
                "tags": [
                    "restaurant-partner"
                ],
                "summary": "This method is to get dashboard widget by id",
                "description": "This method is to get single dashboard widget by id",
                "operationId": "getRestaurantOrderPartnerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/order/restaurant-partner/delete/{id}": {
            "delete": {
                "tags": [
                    "restaurant-partner"
                ],
                "summary": "This method is to delete dashboard widget by id",
                "description": "This method is to delete single dashboard widget by id",
                "operationId": "deleteRestaurantOrderPartnerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/restaurant-partner/create": {
            "post": {
                "tags": [
                    "superadmin-restaurant-partner"
                ],
                "summary": "This method is to store dashboard widget",
                "description": "This method is to store single dashboard widget",
                "operationId": "createRestaurantPartner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "webpage_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "is_active": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/restaurant-partner/update": {
            "put": {
                "tags": [
                    "superadmin-restaurant-partner"
                ],
                "summary": "This method is to update dashboard widget",
                "description": "This method is to update single dashboard widget",
                "operationId": "updateRestaurantPartner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "user_type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "webpage_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin"
                                    },
                                    "is_active": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/restaurant-partner/get": {
            "get": {
                "tags": [
                    "superadmin-restaurant-partner"
                ],
                "summary": "This method is to get dashboard widget",
                "description": "This method is to get  dashboard widget",
                "operationId": "getRestaurantPartnerSuperAdmin",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant-partner/get": {
            "get": {
                "tags": [
                    "restaurant-partner"
                ],
                "summary": "This method is to get dashboard widget",
                "description": "This method is to get  dashboard widget",
                "operationId": "getRestaurantPartner",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/restaurant-partner/get/{id}": {
            "get": {
                "tags": [
                    "superadmin-restaurant-partner"
                ],
                "summary": "This method is to get dashboard widget by id",
                "description": "This method is to get single dashboard widget by id",
                "operationId": "getRestaurantPartnerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/restaurant-partner/delete/{id}": {
            "delete": {
                "tags": [
                    "superadmin-restaurant-partner"
                ],
                "summary": "This method is to delete dashboard widget by id",
                "description": "This method is to delete single dashboard widget by id",
                "operationId": "deleteRestaurantPartnerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getvalues/{restaurantId}/{rate}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get   Review Value",
                "description": "This method is to get   Review Value",
                "operationId": "getReviewValues",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "rate",
                        "in": "path",
                        "description": "rate",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getavg/review/{restaurantId}/{start}/{end}": {
            "get": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to get average",
                "description": "This method is to get average",
                "operationId": "getAverage",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "from date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "to date",
                        "required": true,
                        "example": "2026-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getreview/{restaurantId}/{rate}/{start}/{end}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to filter   Review",
                "description": "This method is to filter   Review",
                "operationId": "filterReview",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "rate",
                        "in": "path",
                        "description": "rate",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "from date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "to date",
                        "required": true,
                        "example": "2026-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getreviewAll/{restaurantId}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get review by restaurant id",
                "description": "This method is to get review by restaurant id",
                "operationId": "getReviewByRestaurantId",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getcustomerreview/{restaurantId}/{start}/{end}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get customer review",
                "description": "This method is to get customer review",
                "operationId": "getCustommerReview",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "from date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "to date",
                        "required": true,
                        "example": "2026-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/{restaurantId}": {
            "post": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to store review",
                "description": "This method is to store review",
                "operationId": "storeReview",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "rate",
                                    "comment",
                                    "values"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "rate": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2.5"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "not good"
                                    },
                                    "values": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "question_id": 1,
                                                "tag_id": 2,
                                                "star_id": 1
                                            },
                                            {
                                                "question_id": 2,
                                                "tag_id": 1,
                                                "star_id": 4
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new-guest/{restaurantId}": {
            "post": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to store review by guest user",
                "description": "This method is to store review by guest user",
                "operationId": "storeReviewByGuest",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "guest_full_name",
                                    "guest_phone",
                                    "description",
                                    "rate",
                                    "comment",
                                    "values"
                                ],
                                "properties": {
                                    "guest_full_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "guest_phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "0177"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "rate": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2.5"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "not good"
                                    },
                                    "values": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "question_id": 1,
                                                "tag_id": 2,
                                                "star_id": 1
                                            },
                                            {
                                                "question_id": 2,
                                                "tag_id": 1,
                                                "star_id": 4
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/create/questions": {
            "post": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to store question",
                "description": "This method is to store question",
                "operationId": "storeQuestion",
                "requestBody": {
                    "description": "supported value is of type is 'star','emoji','numbers','heart'",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question",
                                    "restaurant_id",
                                    "is_active"
                                ],
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "restaurant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "star"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/update/questions": {
            "put": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to update question",
                "description": "This method is to update question",
                "operationId": "updateQuestion",
                "requestBody": {
                    "description": "supported value is of type is 'star','emoji','numbers','heart'",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question",
                                    "is_active",
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "question": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "was it good?"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "star"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/update/active_state/questions": {
            "put": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to update question's active state",
                "description": "This method is to update question's active state",
                "operationId": "updateQuestionActiveState",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "is_active",
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get question",
                "description": "This method is to get question",
                "operationId": "getQuestion",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all/customer": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question without pagination",
                "description": "This method is to get all question without pagination",
                "operationId": "getQuestionAllUnauthorized",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/review-new/get/questions-all": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question without pagination",
                "description": "This method is to get all question without pagination",
                "operationId": "getQuestionAll",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report",
                "description": "This method is to get all question report",
                "operationId": "getQuestionAllReport",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": false,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": false,
                        "example": "2023-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions/{id}": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get question by id",
                "description": "This method is to get question by id",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "question Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions/{id}/{restaurantId}": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get question by id",
                "description": "This method is to get question by id",
                "operationId": "getQuestionById2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "question Id",
                        "required": false
                    },
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/delete/questions/{id}": {
            "delete": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to delete question by id",
                "description": "This method is to delete question by id",
                "operationId": "deleteQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "question Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/create/tags": {
            "post": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to store tag",
                "description": "This method is to store tag",
                "operationId": "storeTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag",
                                    "restaurant_id"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "restaurant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/create/tags/multiple/{restaurantId}": {
            "post": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to store tag",
                "description": "This method is to store tag",
                "operationId": "storeTagMultiple",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "tag1",
                                            "tag2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/update/tags": {
            "put": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to update tag",
                "description": "This method is to update tag",
                "operationId": "updateTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag",
                                    "id"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/tags": {
            "get": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to get tag",
                "description": "This method is to get tag",
                "operationId": "getTag",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/tags/{id}": {
            "get": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to get tag  by id",
                "description": "This method is to get tag  by id",
                "operationId": "getTagById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/tags/{id}/{reataurantId}": {
            "get": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to get tag  by id",
                "description": "This method is to get tag  by id",
                "operationId": "getTagById2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag Id",
                        "required": false
                    },
                    {
                        "name": "reataurantId",
                        "in": "path",
                        "description": "reataurantId",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/delete/tags/{id}": {
            "delete": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to delete tag  by id",
                "description": "This method is to delete tag  by id",
                "operationId": "deleteTagById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/owner/create/questions": {
            "post": {
                "tags": [
                    "review.setting.link"
                ],
                "summary": "This method is to store question",
                "description": "This method is to store question.",
                "operationId": "storeOwnerQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_id",
                                    "stars"
                                ],
                                "properties": {
                                    "question_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "stars": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "star_id": "2",
                                                "tags": [
                                                    {
                                                        "tag_id": "2"
                                                    },
                                                    {
                                                        "tag_id": "2"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/owner/update/questions": {
            "post": {
                "tags": [
                    "review.setting.link"
                ],
                "summary": "This method is to update question",
                "description": "This method is to update question",
                "operationId": "updateOwnerQuestion",
                "parameters": [
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": false,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_id",
                                    "stars"
                                ],
                                "properties": {
                                    "question_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "stars": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "star_id": "2",
                                                "tags": [
                                                    {
                                                        "tag_id": "2"
                                                    },
                                                    {
                                                        "tag_id": "2"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report/guest": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report guest",
                "description": "This method is to get all question report guest",
                "operationId": "getQuestionAllReportGuest",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": false,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": false,
                        "example": "2023-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report/unauthorized": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report unauthorized",
                "description": "This method is to get all question report unauthorized",
                "operationId": "getQuestionAllReportUnauthorized",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/review-new/get/questions-all-report/guest/unauthorized": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report guest unauthorized",
                "description": "This method is to get all question report guest unauthorized",
                "operationId": "getQuestionAllReportGuestUnauthorized",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/review-new/get/questions-all-report/guest/quantum": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report guest and only restaurant owner of the restaurant can view this ",
                "description": "This method is to get all question report guest and only restaurant owner of the restaurant can view this ",
                "operationId": "getQuestionAllReportGuestQuantum",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "quantum",
                        "in": "query",
                        "description": "quantum",
                        "required": false
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "period",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report/quantum": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report.  and only restaurant owner of the restaurant can view this ",
                "description": "This method is to get all question report. and only restaurant owner of the restaurant can view this ",
                "operationId": "getQuestionAllReportQuantum",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "quantum",
                        "in": "query",
                        "description": "quantum",
                        "required": false
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "period",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report-by-user/{perPage}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get all question report by user",
                "description": "This method is to get all question report by user",
                "operationId": "getQuestionAllReportByUser",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage Id",
                        "required": true
                    },
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": false,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": false,
                        "example": "2023-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report-by-user-guest/{perPage}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get all question report by user guest",
                "description": "This method is to get all question report by user guest",
                "operationId": "getQuestionAllReportByUserGuest",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage Id",
                        "required": false
                    },
                    {
                        "name": "restaurant_id",
                        "in": "query",
                        "description": "restaurant Id",
                        "required": false
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": false,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": false,
                        "example": "2023-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get roles",
                "description": "This method is to get roles",
                "operationId": "getRoles",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to update role",
                "description": "This method is to update role",
                "operationId": "updateRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "permissions"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "permissions": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "user_create",
                                            "user_update"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to store role",
                "description": "This method is to store role",
                "operationId": "createRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "permissions": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "user_create",
                                            "user_update"
                                        ]
                                    },
                                    "is_default_for_business": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles/{id}": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get role by id",
                "description": "This method is to get role by id",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles/{ids}": {
            "delete": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to delete role by id",
                "description": "This method is to delete role by id",
                "operationId": "deleteRolesByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "ids",
                        "required": true,
                        "example": "1,2,3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/initial-role-permissions": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get initioal role permissions",
                "description": "This method is to get initioal role permissions",
                "operationId": "getInitialRolePermissions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/initial-permissions": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get initioal permissions",
                "description": "This method is to get initioal permissions",
                "operationId": "getInitialPermissions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/restaurant/UpdateResturantStripeDetails/{restaurentId}": {
            "patch": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to update restaurant",
                "description": "This method is to update restaurant",
                "operationId": "UpdateResturantStripeDetails",
                "parameters": [
                    {
                        "name": "restaurentId",
                        "in": "path",
                        "description": "method",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": true,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Name",
                                    "Layout",
                                    "Address",
                                    "PostCode",
                                    "enable_question",
                                    "totalTables"
                                ],
                                "properties": {
                                    "enable_customer_order_payment": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "STRIPE_KEY": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "string"
                                    },
                                    "STRIPE_SECRET": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "string"
                                    },
                                    "eat_in_payment_mode": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "cash": 0,
                                            "stripe": 0
                                        }
                                    },
                                    "takeaway_payment_mode": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "cash": 0,
                                            "stripe": 0
                                        }
                                    },
                                    "delivery_payment_mode": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "cash": 0,
                                            "stripe": 0
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/restaurant/getResturantStripeDetails/{id}": {
            "get": {
                "tags": [
                    "restaurant"
                ],
                "summary": "This method is to get restaurant stripe details by id",
                "description": "This method is to get restaurant stripe details by id",
                "operationId": "GetResturantStripeDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/total-restaurant": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get TotalRestaurant report",
                "description": "This method is to get TotalRestaurant report",
                "operationId": "getTotalRestaurantReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/total-restaurant-enabled": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get TotalEnabled restaurant report",
                "description": "This method is to get TotalEnabled  restaurant report",
                "operationId": "getTotalEnabledRestaurantReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/total-restaurant-disabled": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Total Disabledrestaurant report",
                "description": "This method is to get Total Disabled restaurant report",
                "operationId": "getTotalDisabledRestaurantReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/total-customers": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Total Customers report",
                "description": "This method is to get Total Customers  report",
                "operationId": "getTotalCustomers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/total-orders": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Total Orders report",
                "description": "This method is to get Total Orders  report",
                "operationId": "getTotalOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/monthly-orders": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get monthly Orders report",
                "description": "This method is to get monthly Orders  report",
                "operationId": "getMonthlyOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/monthly-revenue": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get monthly Orders report",
                "description": "This method is to get monthly Orders  report",
                "operationId": "getMonthlyRevenue",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/monthly-customer": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get monthly Customer report",
                "description": "This method is to get monthly Customer  report",
                "operationId": "getMonthlyCustomer",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/monthly-menu": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get monthly Menu report",
                "description": "This method is to get monthly Menu  report",
                "operationId": "getMonthlyMenu",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/weekly-orders": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get weekly Orders report",
                "description": "This method is to get weekly Orders  report",
                "operationId": "getWeeklyOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/weekly-revenue": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Weekly revenue report",
                "description": "This method is to get Weekly revenue  report",
                "operationId": "getWeeklyRevenue",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/weekly-customer": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get monthly Customer report",
                "description": "This method is to get monthly Customer  report",
                "operationId": "getWeeklyCustomer",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/weekly-menu": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get weekly menu report",
                "description": "This method is to get weekly menu  report",
                "operationId": "getWeeklyMenu",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/today-orders": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Today Orders report",
                "description": "This method is to Today Orders  report",
                "operationId": "getTodayOrders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/total-reviews": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Total Reviews report",
                "description": "This method is to Total Reviews  report",
                "operationId": "getTotalReviews",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/today-reviews": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get Today Reviews report",
                "description": "This method is to Today Reviews  report",
                "operationId": "getTodayReviews",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/review-report": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get  Reviews report",
                "description": "This method is to get Reviews  report",
                "operationId": "getReviewReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/order-report": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get  Order report",
                "description": "This method is to get Order  report",
                "operationId": "getSuperAdminOrderReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/dashboard-report/customer-report": {
            "get": {
                "tags": [
                    "super_admin_report"
                ],
                "summary": "This method is to get  Customer report",
                "description": "This method is to get Customer  report",
                "operationId": "getCustomerReport",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/customer-list/{perPage}": {
            "get": {
                "tags": [
                    "super_admin_report.customer"
                ],
                "summary": "This method is to get  Customer report",
                "description": "This method is to get Customer  report",
                "operationId": "getCustomerReportSuperadmin",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "search_term",
                        "in": "query",
                        "description": "search_term",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/owner-list/{perPage}": {
            "get": {
                "tags": [
                    "super_admin_report.customer"
                ],
                "summary": "This method is to get  Customer report",
                "description": "This method is to get Customer  report",
                "operationId": "getOwnerReport",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "search_term",
                        "in": "query",
                        "description": "search_term",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/superadmin/user-delete/{id}": {
            "delete": {
                "tags": [
                    "super_admin_report.customer"
                ],
                "summary": "This method is to delete  Customer by id",
                "description": "This method is to delete Customer  by id",
                "operationId": "deleteCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variation_type": {
            "post": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to store variation type",
                "description": "This method is to store variation type",
                "operationId": "storeVariationType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "restaurant_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variation_type/{id}": {
            "delete": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to store variation type",
                "description": "This method is to delete variation type",
                "operationId": "deleteVariationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variation/{id}": {
            "delete": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to delete variation ",
                "description": "This method is to delete variation ",
                "operationId": "deleteVariation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variation_type/multiple/{restaurantId}": {
            "post": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to store multiple variation type",
                "description": "This method is to store multiple variation type",
                "operationId": "storeMultipleVariationType",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "VarationType"
                                ],
                                "properties": {
                                    "VarationType": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "hggggg",
                                                "description": "fffffffffff",
                                                "order_number": 1
                                            },
                                            {
                                                "name": "hggggg",
                                                "description": "fffffffffff",
                                                "order_number": 1
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variation_type/multiple": {
            "patch": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to update multiple variation type",
                "description": "This method is to update multiple variation type",
                "operationId": "updateMultipleVariationType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "VarationType"
                                ],
                                "properties": {
                                    "VarationType": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "varation_type_id": "1",
                                                "name": "Multiple",
                                                "description": "Multiple",
                                                "order_number": 1
                                            },
                                            {
                                                "varation_type_id": "2",
                                                "name": "Multiple",
                                                "description": "Multiple",
                                                "order_number": 1
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variation/multiple": {
            "patch": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to update multiple variation ",
                "description": "This method is to update multiple variation ",
                "operationId": "updateMultipleVariation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "variations"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "variations": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": "1",
                                                "name": "Multiple",
                                                "description": "Multiple",
                                                "price": "10"
                                            },
                                            {
                                                "id": "1",
                                                "name": "Multiple",
                                                "description": "Multiple",
                                                "price": "10"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/variationtype": {
            "patch": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to update variation type",
                "description": "This method is to update variation type",
                "operationId": "updateVariationType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "VTypeId"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "VTypeId": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "order_number": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation": {
            "post": {
                "tags": [
                    "variation"
                ],
                "summary": " This method is to store variation",
                "description": " This method is to store variation",
                "operationId": "storeVariation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "type_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "type_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to update variation",
                "description": "This method is to update variation",
                "operationId": "updateVariation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "Vid"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "Vid": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/multiple/varations": {
            "post": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to store multiple variation ",
                "description": "This method is to store multiple variation ",
                "operationId": "storeMultipleVariation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "varation",
                                    "restaurant_id"
                                ],
                                "properties": {
                                    "restaurant_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "varation": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "ssssss",
                                                "description": "Multiple",
                                                "type_id": 1,
                                                "price": 90
                                            },
                                            {
                                                "name": "ssssss",
                                                "description": "Multiple",
                                                "type_id": 1,
                                                "price": 90
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/dish_variation": {
            "post": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to store dish variation",
                "description": "This method is to store dish variation",
                "operationId": "storeDishVariation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "minimum_variation_required",
                                    "no_of_varation_allowed",
                                    "type_id",
                                    "dish_id"
                                ],
                                "properties": {
                                    "minimum_variation_required": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "no_of_varation_allowed": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "type_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "test"
                                    },
                                    "dish_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "order_number": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to update multiple variation type",
                "description": "This method is to update multiple variation type",
                "operationId": "updateDishVariation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "no_of_varation_allowed",
                                    "minimum_variation_required",
                                    "type_id",
                                    "dish_id"
                                ],
                                "properties": {
                                    "minimum_variation_required": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "test"
                                    },
                                    "no_of_varation_allowed": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "test"
                                    },
                                    "type_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "test"
                                    },
                                    "dish_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "order_number": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/multiple/dish_variation/{dishId}": {
            "post": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to store multiple dish variation",
                "description": "This method is to store multiple dish variation",
                "operationId": "storeMultipleDishVariation",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "varation"
                                ],
                                "properties": {
                                    "varation": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "0": "minimum_variation_required",
                                                "no_of_varation_allowed": 5,
                                                "type_id": 1,
                                                "order_number": 1
                                            },
                                            {
                                                "0": "minimum_variation_required",
                                                "no_of_varation_allowed": 5,
                                                "type_id": 2,
                                                "order_number": 1
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/dish_variation/{dishId}": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get all dish variation",
                "description": "This method is to get all dish variation",
                "operationId": "getAllDishVariation",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/dish_variation/multiple/{dishId}": {
            "patch": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to update multiple variation type",
                "description": "This method is to update multiple variation type",
                "operationId": "updateMultipleDishVariation",
                "parameters": [
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "DishVariations"
                                ],
                                "properties": {
                                    "DishVariations": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "0": "minimum_variation_required",
                                                "no_of_varation_allowed": "10",
                                                "type_id": 10,
                                                "dish_id": 1,
                                                "order_number": 1
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/{restaurantId}": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get all  variation  with dish",
                "description": "This method is to get all  variation  with dish",
                "operationId": "getAllVariationWithDish",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation-type/{id}": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get single variation type",
                "description": "This method is to get single variation type",
                "operationId": "getSingleVariationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation2/{restaurantId}',": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get all  variation  with dish2",
                "description": "This method is to get all  variation  with dish2",
                "operationId": "getAllVariationTypeWithVariation",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation2/{restaurantId}/{dishId}": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get all  variation  with dish2",
                "description": "This method is to get all  variation  with dish2",
                "operationId": "getAllVariationTypeWithVariationByDishId",
                "parameters": [
                    {
                        "name": "restaurantId",
                        "in": "path",
                        "description": "restaurantId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/type/count/{typeId}": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get all  variation   by type id",
                "description": "This method is to get all  variation   by type id",
                "operationId": "getAllVariationByType_Id",
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "path",
                        "description": "typeId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/by-restaurant-id/{restaurant_id}": {
            "get": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to get all  variation   by type restaurant id",
                "description": "This method is to get all  variation   by restaurant id",
                "operationId": "getAllVariationByRestaurantId",
                "parameters": [
                    {
                        "name": "restaurant_id",
                        "in": "path",
                        "description": "restaurant_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/variation/unlink/{typeId}/{dishId}": {
            "delete": {
                "tags": [
                    "variation"
                ],
                "summary": "This method is to delete dish variation",
                "description": "This method is to delete dish variation",
                "operationId": "deleteDishVariation",
                "parameters": [
                    {
                        "name": "typeId",
                        "in": "path",
                        "description": "typeId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "dishId",
                        "in": "path",
                        "description": "dishId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "auth"
        },
        {
            "name": "business_days_management",
            "description": "business_days_management"
        },
        {
            "name": "campaign_management",
            "description": "campaign_management"
        },
        {
            "name": "business_management",
            "description": "business_management"
        },
        {
            "name": "client.coupon",
            "description": "client.coupon"
        },
        {
            "name": "coupon_management",
            "description": "coupon_management"
        },
        {
            "name": "reports",
            "description": "reports"
        },
        {
            "name": "daily-order-partner-sale",
            "description": "daily-order-partner-sale"
        },
        {
            "name": "daily_views",
            "description": "daily_views"
        },
        {
            "name": "superadmin-dashboard-widget",
            "description": "superadmin-dashboard-widget"
        },
        {
            "name": "user-dashboard",
            "description": "user-dashboard"
        },
        {
            "name": "dishes",
            "description": "dishes"
        },
        {
            "name": "z.unused",
            "description": "z.unused"
        },
        {
            "name": "template_management.email",
            "description": "template_management.email"
        },
        {
            "name": "template_management.wrapper.email",
            "description": "template_management.wrapper.email"
        },
        {
            "name": "expense_type_management",
            "description": "expense_type_management"
        },
        {
            "name": "forgot_password",
            "description": "forgot_password"
        },
        {
            "name": "leaflet",
            "description": "leaflet"
        },
        {
            "name": "menu",
            "description": "menu"
        },
        {
            "name": "notification",
            "description": "notification"
        },
        {
            "name": "order",
            "description": "order"
        },
        {
            "name": "report",
            "description": "report"
        },
        {
            "name": "owner",
            "description": "owner"
        },
        {
            "name": "restaurant",
            "description": "restaurant"
        },
        {
            "name": "expense_management",
            "description": "expense_management"
        },
        {
            "name": "restaurant-partner",
            "description": "restaurant-partner"
        },
        {
            "name": "superadmin-restaurant-partner",
            "description": "superadmin-restaurant-partner"
        },
        {
            "name": "review",
            "description": "review"
        },
        {
            "name": "review.setting.question",
            "description": "review.setting.question"
        },
        {
            "name": "review.setting.tag",
            "description": "review.setting.tag"
        },
        {
            "name": "review.setting.link",
            "description": "review.setting.link"
        },
        {
            "name": "user_management.role",
            "description": "user_management.role"
        },
        {
            "name": "super_admin_report",
            "description": "super_admin_report"
        },
        {
            "name": "super_admin_report.customer",
            "description": "super_admin_report.customer"
        },
        {
            "name": "variation",
            "description": "variation"
        }
    ]
}